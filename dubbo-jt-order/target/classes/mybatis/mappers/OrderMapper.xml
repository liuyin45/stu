<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jt.order.mapper.OrderMapper" >
  
  
  <!-- resultMap 主要作用  实现数据封装表
       表
       user_id
       user_name
       user_age
       字段
       userId
       userName
       userAge
   -->
  <!-- type:表示指定映射的数据类型,包括数据类型, 包名.类名
       id: 标识符 
       column="数据表的字段名称"
       property="对象的属性名称"
       extends="" 继承另一个resultMap的映射关系
       autoMapping="true" 
       typeHandler=""
       规则:
      1.若是单表映射,如果数据表的字段与对象的属性同名,则可以省略映射步骤,可以自动映射
      2.若是多表关联,全部的映射关系必须手写
                    如果主表的字段与对象的属性同名,则主表可以自动映射;
                    从表必须全部编辑映射关系,缺一不可                   
  <resultMap type="User" id="userRM">
  -->
        <!-- 设定主键 
        <id column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="user_age" property="userAge" />

  </resultMap>
  -->
  


 <select id="findOrderById" resultMap="orderRM">
       
       select * from tb_order where order_id = #{orderId}

  </select>
  
  <resultMap type="Order" id="orderRM" autoMapping="true">
  
        <id column="order_id" property="orderId"/>
        
        <!-- 封装一对一  订单物流信息  mybatis管理-->
        <association property="orderShipping" 
                     javaType="OrderShipping" 
                     column="order_id"
                     select="findOrderShipping"/>
        <!-- 封装一对多  订单物流信息  mybatis管理
          ofType 集合中元素的属性类型-->
        <collection property="orderItems"
                    ofType="OrderItem"
                    column="order_id"
                    select="findOrderItems"
                    ></collection>
  </resultMap>
  
      <select id="findOrderShipping" resultType="OrderShipping">   
           select * from tb_order_shipping where order_id = #{orderId}    
      </select>
      
      
      <select id="findOrderItems" resultType="OrderItem">   
           select * from tb_order_item where order_id = #{orderId}    
      </select>
  
  
    <!-- 将超时订单   <![CDATA[]]>转义标签-->
    <update id="updateStatus">
      <![CDATA[update tb_order set status = 6 
        where status = 1 
        and created < #{timeOut}]]>
    </update>
  
    
  </mapper>